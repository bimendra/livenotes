openapi: 3.0.3
info:
  title: LiveNotes
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://livenotes.local'
paths:
  /api/user:
    get:
      summary: ''
      operationId: getApiUser
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/v1/comments:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: ''
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/v1/comments/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No query results for model [App\Models\Comment] 2'
                properties:
                  message:
                    type: string
                    example: 'No query results for model [App\Models\Comment] 2'
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the comment.'
        example: 2
        required: true
        schema:
          type: integer
  /api/v1/posts:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 17
                      title: 'Hello 2'
                      body: []
                    -
                      id: 18
                      title: 'Hello 2'
                      body: []
                    -
                      id: 19
                      title: 'Hello 2'
                      body: []
                    -
                      id: 20
                      title: 'Hello 2'
                      body: []
                    -
                      id: 21
                      title: 'Hello 2'
                      body: []
                    -
                      id: 22
                      title: 'Hello 2'
                      body: null
                    -
                      id: 23
                      title: 'Hello 2'
                      body: []
                    -
                      id: 24
                      title: 'Hello 2'
                      body: []
                    -
                      id: 25
                      title: 'Hello 2'
                      body: []
                    -
                      id: 26
                      title: 'Hello 2'
                      body: []
                  links:
                    first: 'http://livenotes.local/api/v1/posts?page=1'
                    last: 'http://livenotes.local/api/v1/posts?page=3'
                    prev: null
                    next: 'http://livenotes.local/api/v1/posts?page=2'
                  meta:
                    current_page: 1
                    from: 1
                    last_page: 3
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'http://livenotes.local/api/v1/posts?page=1'
                        label: '1'
                        active: true
                      -
                        url: 'http://livenotes.local/api/v1/posts?page=2'
                        label: '2'
                        active: false
                      -
                        url: 'http://livenotes.local/api/v1/posts?page=3'
                        label: '3'
                        active: false
                      -
                        url: 'http://livenotes.local/api/v1/posts?page=2'
                        label: 'Next &raquo;'
                        active: false
                    path: 'http://livenotes.local/api/v1/posts'
                    per_page: 10
                    to: 10
                    total: 24
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 17
                        title: 'Hello 2'
                        body: []
                      -
                        id: 18
                        title: 'Hello 2'
                        body: []
                      -
                        id: 19
                        title: 'Hello 2'
                        body: []
                      -
                        id: 20
                        title: 'Hello 2'
                        body: []
                      -
                        id: 21
                        title: 'Hello 2'
                        body: []
                      -
                        id: 22
                        title: 'Hello 2'
                        body: null
                      -
                        id: 23
                        title: 'Hello 2'
                        body: []
                      -
                        id: 24
                        title: 'Hello 2'
                        body: []
                      -
                        id: 25
                        title: 'Hello 2'
                        body: []
                      -
                        id: 26
                        title: 'Hello 2'
                        body: []
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 17
                        title:
                          type: string
                          example: 'Hello 2'
                        body:
                          type: array
                          example: []
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: 'http://livenotes.local/api/v1/posts?page=1'
                      last:
                        type: string
                        example: 'http://livenotes.local/api/v1/posts?page=3'
                      prev:
                        type: string
                        example: null
                      next:
                        type: string
                        example: 'http://livenotes.local/api/v1/posts?page=2'
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 3
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: 'http://livenotes.local/api/v1/posts?page=1'
                            label: '1'
                            active: true
                          -
                            url: 'http://livenotes.local/api/v1/posts?page=2'
                            label: '2'
                            active: false
                          -
                            url: 'http://livenotes.local/api/v1/posts?page=3'
                            label: '3'
                            active: false
                          -
                            url: 'http://livenotes.local/api/v1/posts?page=2'
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      path:
                        type: string
                        example: 'http://livenotes.local/api/v1/posts'
                      per_page:
                        type: integer
                        example: 10
                      to:
                        type: integer
                        example: 10
                      total:
                        type: integer
                        example: 24
      tags:
        - Posts
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Posts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: quo
                  nullable: false
                body:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
                user_ids:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties: {  }
              required:
                - title
                - body
                - user_ids
      security: []
  '/api/v1/posts/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 17
                    title: 'Hello 2'
                    body: []
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 17
                      title:
                        type: string
                        example: 'Hello 2'
                      body:
                        type: array
                        example: []
      tags:
        - Posts
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Posts
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Posts
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the post.'
        example: 17
        required: true
        schema:
          type: integer
  /api/v1/users:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: query
          name: page_size
          description: 'Size per page. Defaults to 20.'
          example: 20
          required: false
          schema:
            type: integer
            description: 'Size per page. Defaults to 20.'
            example: 20
            nullable: false
        -
          in: query
          name: page
          description: 'Page to view.'
          example: 19
          required: false
          schema:
            type: integer
            description: 'Page to view.'
            example: 19
            nullable: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 8
                      name: 'Mrs. Jany Sporer II'
                      email: ahalvorson@example.org
                      email_verified_at: '2025-01-26T12:09:54.000000Z'
                      created_at: '2025-01-26T12:09:55.000000Z'
                      updated_at: '2025-01-26T12:09:55.000000Z'
                    -
                      id: 9
                      name: 'Prof. Triston Barton'
                      email: rward@example.com
                      email_verified_at: '2025-01-26T12:09:55.000000Z'
                      created_at: '2025-01-26T12:09:55.000000Z'
                      updated_at: '2025-01-26T12:09:55.000000Z'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 8
                        name: 'Mrs. Jany Sporer II'
                        email: ahalvorson@example.org
                        email_verified_at: '2025-01-26T12:09:54.000000Z'
                        created_at: '2025-01-26T12:09:55.000000Z'
                        updated_at: '2025-01-26T12:09:55.000000Z'
                      -
                        id: 9
                        name: 'Prof. Triston Barton'
                        email: rward@example.com
                        email_verified_at: '2025-01-26T12:09:55.000000Z'
                        created_at: '2025-01-26T12:09:55.000000Z'
                        updated_at: '2025-01-26T12:09:55.000000Z'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 8
                        name:
                          type: string
                          example: 'Mrs. Jany Sporer II'
                        email:
                          type: string
                          example: ahalvorson@example.org
                        email_verified_at:
                          type: string
                          example: '2025-01-26T12:09:54.000000Z'
                        created_at:
                          type: string
                          example: '2025-01-26T12:09:55.000000Z'
                        updated_at:
                          type: string
                          example: '2025-01-26T12:09:55.000000Z'
      tags:
        - Users
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 10
                    name: 'Maryjane Bins'
                    email: jodie06@example.net
                    email_verified_at: '2025-01-26T12:09:55.000000Z'
                    created_at: '2025-01-26T12:09:55.000000Z'
                    updated_at: '2025-01-26T12:09:55.000000Z'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 10
                      name:
                        type: string
                        example: 'Maryjane Bins'
                      email:
                        type: string
                        example: jodie06@example.net
                      email_verified_at:
                        type: string
                        example: '2025-01-26T12:09:55.000000Z'
                      created_at:
                        type: string
                        example: '2025-01-26T12:09:55.000000Z'
                      updated_at:
                        type: string
                        example: '2025-01-26T12:09:55.000000Z'
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Name of the user.'
                  example: 'John Doe'
                  nullable: false
                email:
                  type: string
                  description: 'Email of the user.'
                  example: doe@doe.com
                  nullable: false
              required:
                - name
                - email
      security: []
  '/api/v1/users/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 11
                    name: 'Davon Mann'
                    email: garnet79@example.net
                    email_verified_at: '2025-01-26T12:09:55.000000Z'
                    created_at: '2025-01-26T12:09:55.000000Z'
                    updated_at: '2025-01-26T12:09:55.000000Z'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 11
                      name:
                        type: string
                        example: 'Davon Mann'
                      email:
                        type: string
                        example: garnet79@example.net
                      email_verified_at:
                        type: string
                        example: '2025-01-26T12:09:55.000000Z'
                      created_at:
                        type: string
                        example: '2025-01-26T12:09:55.000000Z'
                      updated_at:
                        type: string
                        example: '2025-01-26T12:09:55.000000Z'
      tags:
        - Users
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    id: 12
                    name: 'Dr. Libbie Daniel MD'
                    email: ohilpert@example.org
                    email_verified_at: '2025-01-26T12:09:55.000000Z'
                    created_at: '2025-01-26T12:09:55.000000Z'
                    updated_at: '2025-01-26T12:09:55.000000Z'
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 12
                      name:
                        type: string
                        example: 'Dr. Libbie Daniel MD'
                      email:
                        type: string
                        example: ohilpert@example.org
                      email_verified_at:
                        type: string
                        example: '2025-01-26T12:09:55.000000Z'
                      created_at:
                        type: string
                        example: '2025-01-26T12:09:55.000000Z'
                      updated_at:
                        type: string
                        example: '2025-01-26T12:09:55.000000Z'
      tags:
        - Users
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Name of the user.'
                  example: 'John Doe'
                  nullable: false
                email:
                  type: string
                  description: 'Email of the user.'
                  example: doe@doe.com
                  nullable: false
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data: success
                properties:
                  data:
                    type: string
                    example: success
      tags:
        - Users
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 2
        required: true
        schema:
          type: integer
      -
        in: path
        name: User
        description: 'User user'
        example: 7
        required: true
        schema:
          type: integer
tags:
  -
    name: Endpoints
    description: ''
  -
    name: Posts
    description: "\nAPI to manage users resource."
  -
    name: Users
    description: ''
